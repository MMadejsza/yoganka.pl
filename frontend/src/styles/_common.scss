@use 'sass:map';
@use 'sass:color';
@use './utils/' as *;

//! COMMON BLOCKS
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  list-style: none;
}

#root {
  display: grid;
  place-content: center;
}
html {
  --scale: 1; // Initial scale to be changed by user
  --section-padding-y: #{map.get($sizes, section-padding-y)};

  scroll-behavior: smooth;
  font-family: 'EB Garamond', serif;
  font-weight: 400;
  font-size: calc(var(--scale) * 8.5px);
  text-align: center;
  color: map.get($colors, base-text);

  background-color: map.get($colors, base);
}
body {
  margin: 0 auto;
  min-height: 100vh;
  display: grid;
}

ul {
  list-style: none;
}
img {
  display: block;
  max-width: 100%;
}
picture {
  display: grid;
  grid-column: 1/-1;
  max-height: 100%;
  width: 100%;
  align-content: center;
  place-content: center;
  overflow: hidden;
  .about__certificates & {
    width: auto;
  }

  .tile & {
    max-height: 45vh;
    max-width: 80%;
  }

  .footer__social & {
    overflow: visible;
    max-height: unset;
  }
}
a {
  color: inherit;
  cursor: pointer;
  transition: map.get($behavior, base-transition);
}
i {
  --fa-animation-iteration-count: 2;
  --fa-animation-duration: 1.1s;
  --fa-animation-delay: 0.8s;
  // --fa-animation-timing: ease-in;
}

.blur {
  backdrop-filter: blur(10px);
}

.italic {
  font-style: italic;
}

span.click-suggestion {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  bottom: 1%;
  z-index: 2;
  color: color-mix(in srgb, #{map.get($colors, tile-title)} 25%, transparent);
  transition: map.get($behavior, base-transition);
}
.stopScroll {
  overflow: hidden;
}

// page
.error {
  grid-area: space;
  place-self: center;
  margin: 2rem auto;
  text-align: center;
}

@include respond-to(mobile-xs) {
  html {
    --section-padding-y: 2rem;
    font-size: calc(var(--scale) * 9px);
  }
}
@include respond-to(mobile-s) {
  html {
    font-size: calc(var(--scale) * 12px);
  }
}
@include respond-to(mobile-sh) {
  html {
    font-size: calc(var(--scale) * 13px);
  }
}
@include respond-to(mobile-l) {
  html {
    font-size: calc(var(--scale) * 10px);
  }
}
@include respond-to(desktop-s) {
  html {
    font-size: calc(var(--scale) * 11px);
  }
}
@include respond-to(desktop-l) {
  html {
    font-size: calc(var(--scale) * 12px);
  }
}
