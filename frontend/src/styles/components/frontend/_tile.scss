@use 'sass:map';
@use 'sass:color';
@use '../../utils/' as *;

%action-btn {
  @include flex(row, center, center);
  flex-wrap: wrap;
  gap: 1rem;
  width: 95%;
  min-height: 48px;
  padding: 0rem 1rem;

  font-size: 1.8rem;
  line-height: 48px;
  font-weight: bold;
  text-transform: uppercase;
  text-decoration: none;
  color: map.get($colors, accent-text);

  cursor: pointer;
  background-color: map.get($colors, accent-bcg);
  border-radius: map.get($sizes, border-radius);
  box-shadow: map.get($shadows, active-text-icons-shadow);
  overflow: hidden;
  transition: map.get($behavior, base-transition);
}

.clickable {
  position: relative;
  box-shadow: map.get($shadows, tile-shadow);

  &:not(.offer-type__more.clickable):after {
    content: ' ';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 10%;
    padding-bottom: 0.5rem;

    font-size: 1rem;
    letter-spacing: 1px;
    color: map.get($colors, tile-text-muted);
    background: linear-gradient(
      to bottom,
      transparent,
      color-mix(in srgb, #{map.get($colors, tile)} 87%, black 13%)
    );

    display: flex;
    justify-content: center;
    align-items: flex-end;
  }
}

.tile {
  position: relative;
  padding: 2.5rem 1rem;
  background-color: map.get($colors, tile);
  border-radius: map.get($sizes, border-radius);
  box-shadow: map.get($shadows, box-shadow);
  overflow: hidden;
  transition: map.get($behavior, base-transition);

  @include flex(column, $align: center, $gap: 2rem);
  flex-basis: 90%;

  .offer-type & {
    min-height: 472px;
    flex-basis: 100%;

    &--classes {
      min-height: 272px;
    }
  }

  &.clickable {
    box-shadow: map.get($shadows, tile-shadow);
  }

  &--xs {
    min-width: 175px;
    margin: 1.5rem 0;
    padding: 1.5rem 1rem;

    @include flex(column, center, center);
  }

  &--m {
    width: 80vw;
    max-height: 450px;
    max-width: 300px;

    &.tile__img {
      max-width: 100px;
      max-width: 100px;
    }
  }

  &--past {
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: 1;

      background-color: color-mix(
        in srgb,
        color-mix(in srgb, #{map.get($colors, tile)} 87%, black 13%) 50%,
        transparent 50%
      );
      // to let interact with the element (not pseudo one)
      pointer-events: none;
    }
  }

  &__img {
    width: 100%;
    height: 100%;
    place-self: center;
    border-radius: map.get($sizes, border-radius);
    object-fit: cover;

    &--event-modal {
      max-width: 50%;
    }

    &--modal-slider {
      max-width: 95%;
      margin: 0;
      aspect-ratio: auto;
    }
  }

  &__title {
    min-height: 6rem;
  }

  &__title,
  &__date {
    font-size: 2.2rem;
    font-weight: 500;
    white-space: pre-line;
    letter-spacing: 1px;
    color: map.get($colors, tile-title);
  }

  &__date {
    color: map.get($colors, tile-text);
  }

  &__location {
    font-size: 1.9rem;
    font-weight: 400;
    white-space: pre-line;
    color: map.get($colors, tile-text-muted);
    flex-grow: 2;
  }

  &__desc {
    font-size: 1.9rem;
    white-space: pre-line;
    color: map.get($colors, tile-text-muted);
    flex-grow: 2;
  }

  &__btn {
    @extend %action-btn;
  }
}

@include respond-to(mobile-xs) {
  .tile {
    flex-basis: 80%;

    &--m {
      max-height: 425px;

      &.tile__img {
        max-width: 150px;
        max-width: 150px;
      }
    }
  }
}
@include respond-to(mobile-s) {
  .tile {
    &--m {
      max-height: 475px;
      max-width: 450px;
    }
  }
}
@include respond-to(mobile-m) {
  $title-font-size: 2.2rem;
  $title-line-height: 1.1;

  .tile {
    .section--turning-tiles + section.offer &,
    .intro.no-bcg-pic + section.offer & {
      flex-basis: 45%;
    }

    .offer-type & {
      flex-basis: 46%;
    }

    .offer-type--events & {
      max-width: 500px;
      flex-basis: 31%;
    }

    &__img--event-modal {
      grid-column: 1 / -1;
    }

    #wyjazdy &__title {
      height: $title-font-size * 3 + 2.5 * $title-line-height;
    }

    &--event {
      $height: $title-font-size * 2 + 1.8 * $title-line-height;

      .tile__title {
        height: $height;
      }

      .tile__date,
      .tile__location {
        word-wrap: break-word;
        height: $height;
      }
    }

    &--m {
      max-height: 475px;
      max-width: 450px;
    }
  }
}
@include respond-to(mobile-pro) {
  .section--turning-tiles + section.offer,
  .intro.no-bcg-pic + section.offer {
    .tile {
      flex-basis: 30%;
    }
  }
}
@include respond-to(mobile-l) {
  .offer-type#zajecia {
    .tile {
      height: -webkit-fill-available;
      max-height: 87%;
    }
  }
}

@supports (-webkit-grid: auto) {
  .tile {
    /* flex layout inside each tile to equalise height */
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    min-height: 250px; /* enforce a sensible minimum */
  }

  .tile__img {
    /* force images to cover their container */
    width: 100%;
    height: auto;
    object-fit: cover;
  }
}
