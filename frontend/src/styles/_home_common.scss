@use 'sass:map';
@use 'sass:color';
@use './utils/' as *;

//! COMMON BLOCKS
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  list-style: none;
}

#root {
  display: grid;
}
html {
  --scale: 1; // Initial scale to be changed by user
  --section-padding-y: #{map.get($sizes, section-padding-y)};

  scroll-behavior: smooth;
  font-family: 'EB Garamond', serif;
  font-weight: 400;
  font-size: calc(var(--scale) * 8.5px);
  text-align: center;
  color: map.get($colors, base-text);

  background-color: map.get($colors, base);
}
body {
  margin: 0 auto;
  min-height: 100vh;
  display: grid;
}
.wrapper {
  position: relative;
  display: grid;
  min-height: 100vh;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  grid-template-rows: auto auto auto auto auto 1fr auto;
  grid-template-areas:
    'header header header header header '
    'about about about about about'
    'offer offer offer offer offer'
    'reviews reviews reviews reviews reviews'
    'cert cert cert cert cert'
    'partners partners partners partners partners'
    'space space space space space'
    'footer footer footer footer footer';
  justify-content: center;
  // gap: 5rem 0;
  -webkit-overflow-scrolling: touch;
}
.space {
  grid-area: space;
}

.wrapper > *:last-child {
  margin-bottom: 0;
}

ul {
  list-style: none;
}
img {
  display: block;
  max-width: 100%;
  .glide & {
    max-height: 97%;
  }
}
picture {
  display: grid;
  grid-column: 1/-1;
  align-content: center;
  .tile & {
    max-width: 80%;
  }
}
a {
  color: inherit;
  cursor: pointer;
  transition: map.get($behavior, base-transition);
}
i {
  --fa-animation-iteration-count: 2;
  --fa-animation-duration: 1.1s;
  --fa-animation-delay: 0.8s;
  // --fa-animation-timing: ease-in;
}
button {
  background-color: transparent;
  border: none;
}
.blur {
  backdrop-filter: blur(10px);
}

section.book-classes {
  grid-column: 1/-1;
}

.section-header {
  grid: 1 / -1;
  padding: 1rem 0.5rem;

  font-size: 4rem;
  line-height: 6rem;
  text-transform: uppercase;
  color: map.get($colors, tile-title);
  max-width: 100%;
  overflow: hidden;
  word-wrap: break-word;
}

span.click-suggestion {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  bottom: 1%;
  z-index: 2;
  color: color-mix(in srgb, #{map.get($colors, tile-title)} 25%, transparent);
  transition: map.get($behavior, base-transition);
}
.stopScroll {
  overflow: hidden;
}
.wrapper > section:not(.partners):not(:first-of-type) {
  margin-bottom: 5rem;
}
.wrapper > section:not(:first-of-type),
.wrapper > main > section:not(:first-of-type),
.modal__modal-body > section:not(:first-of-type),
footer {
  padding: 0 var(--section-padding-y) 2rem;
  box-shadow: map.get($shadows, section-shadow);
}

// page
.error {
  grid-area: space;
  place-self: center;
  margin: 2rem auto;
  text-align: center;
}

section.classes-page ~ .galery {
  grid-area: offer;
  margin-top: 4rem;
}
section > .modal-checklist__list--classes-page {
  padding: 0 2rem;
}

//! COMMON BLOCKS END
@supports (-webkit-grid: auto) {
  .wrapper {
    /* Safari-only fixes for grid and tiles */
    align-items: stretch; /* ensure tiles in a row have equal height */
    grid-auto-rows: minmax(250px, auto); /* set row min height */
    grid-template-columns: repeat(
      auto-fill,
      minmax(300px, 1fr)
    ); /* use auto-fill instead of auto-fit */
    grid-template-rows: repeat(5, auto) minmax(0, 1fr) auto; /* auto rows, flexible space, auto */
    gap: 0.5rem; /* space between tiles */
  }
}
